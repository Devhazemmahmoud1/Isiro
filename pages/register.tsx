import React from "react";
import { useFormik } from "formik";
import style from "../styles/Register.module.css";
import { useRegister } from "../src/controllers/users";
import { Loading } from "../components/Loading";
import Head from "next/head";
import { Alert } from "reactstrap";

const validate = (values: any) => {
  const errors: Errors = {};
  if (!values.first_name) {
    errors.first_name = "This field is required!";
  }

  if (!values.last_name) {
    errors.last_name = "This field is required!";
  }

  if (!values.email) {
    errors.email = "This field is required!";
  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i.test(values.email)) {
    errors.email = "Invalid email address";
  }

  if (!values.phone) {
    errors.phone = "This field is required!";
  }

  if (!values.password) {
    errors.password = "This field is required!";
  }

  if (!values.passwordConfirmation) {
    errors.passwordConfirmation = "This field is required!";
  }

  if (values.passwordConfirmation !== values.password) {
    errors.password = "Password do not match together!";
    errors.passwordConfirmation = "Password do not match together!";
  }

  return errors;
};

export default function RegisterPage() {
  const [type, setType] = React.useState("password");
  const [isSubmitted, setIsSubmitted] = React.useState(false);
  const [error, setError] = React.useState("");
  const [hasError, setHasError] = React.useState(false);
  const [hasSuccess, setHasSuccess] = React.useState(false);
  const [success, setSuccess] = React.useState("");

  const handleSetInputType = () => {
    type == "password" ? setType("text") : setType("password");
  };

  const formik = useFormik({
    initialValues: {
      email: "",
      first_name: "",
      last_name: "",
      phone: "",
      password: "",
      passwordConfirmation: "",
    },
    onSubmit: async (values): Promise<void> => {
      setIsSubmitted(true);
      useRegister(values)
        .then((res) => {
          setSuccess(res.success_en);
          setHasError(false);
          setHasSuccess(true);
          setIsSubmitted(false);
        })
        .catch((err) => {
          setError(err.response.data.error.error_en);
          setHasError(true);
          setHasSuccess(false);
          setIsSubmitted(false);
        });
    },
    validate: validate,
  });

  return (
    <>
      <Head>
        <title>Isiro Sign up</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/isiro_logo.png" />
      </Head>
      <div className="main-wrapper login-body">
        {isSubmitted ? <Loading showLogo={false} /> : ""}
        <div className="login-wrapper">
          <div className="container">
            <img
              className="img-fluid logo-dark mb-2"
              src="./isiro_logo.png"
              alt="Logo"
            />

            <div className="loginbox" style={{ maxWidth: "800px" }}>
              <div className="login-right" style={{ width: "800px" }}>
                <div className="login-right-wrap">
                  <h1>Register</h1>
                  <p className="account-subtitle"></p>
                  <Alert color="danger" isOpen={hasError}>
                    <span className="alert-icon">
                      <i className="ni ni-like-2"></i>
                    </span>
                    <span className="alert-text">
                      <strong className={style.regMessage}>Error! </strong>{" "}
                      {error}
                    </span>
                  </Alert>
                  <Alert color="success" isOpen={hasSuccess}>
                    <span className="alert-icon">
                      <i className="ni ni-like-2"></i>
                    </span>
                    <span className="alert-text">
                      <strong className={style.regMessage}>Wohooo!</strong>{" "}
                      {success}
                    </span>
                  </Alert>
                  <form onSubmit={formik.handleSubmit}>
                    <div className="row justify-content-lg-center">
                      <div className="col-lg-6">
                        <div className="form-group">
                          <label className="form-control-label">
                            First name
                          </label>
                          <input
                            className="form-control"
                            placeholder="First name"
                            type="text"
                            name="first_name"
                            onChange={formik.handleChange}
                            value={formik.values.first_name}
                          />
                          {formik.errors.first_name ? (
                            <div className={style.error}>
                              {formik.errors.first_name}
                            </div>
                          ) : null}
                        </div>
                      </div>
                      <div className="col-lg-6">
                        <div className="form-group">
                          <label className="form-control-label">
                            Last name
                          </label>
                          <input
                            className="form-control"
                            placeholder="Last name"
                            type="text"
                            name="last_name"
                            onChange={formik.handleChange}
                            value={formik.values.last_name}
                          />
                          {formik.errors.last_name ? (
                            <div className={style.error}>
                              {formik.errors.last_name}
                            </div>
                          ) : null}
                        </div>
                      </div>
                      <div className="col-lg-6">
                        <div className="form-group">
                          <label className="form-control-label">
                            Phone number
                          </label>
                          <input
                            className="form-control"
                            placeholder="Phone number"
                            type="text"
                            name="phone"
                            onChange={formik.handleChange}
                            value={formik.values.phone}
                          />
                          {formik.errors.phone ? (
                            <div className={style.error}>
                              {formik.errors.phone}
                            </div>
                          ) : null}
                        </div>
                      </div>
                      <div className="col-lg-6">
                        <div className="form-group">
                          <label className="form-control-label">
                            Email Address
                          </label>
                          <input
                            className="form-control"
                            placeholder="Email address"
                            type="email"
                            name="email"
                            onChange={formik.handleChange}
                            value={formik.values.email}
                          />
                          {formik.errors.email ? (
                            <div className={style.error}>
                              {formik.errors.email}
                            </div>
                          ) : null}
                        </div>
                      </div>
                      <div className="col-lg-6">
                        <div className="form-group">
                          <label className="form-control-label">Password</label>
                          <input
                            className="form-control"
                            placeholder="Password"
                            type={type}
                            name="password"
                            onChange={formik.handleChange}
                            value={formik.values.password}
                          />
                          {formik.errors.password ? (
                            <div className={style.error}>
                              {formik.errors.password}
                            </div>
                          ) : null}
                          <span
                            className="fas fa-eye toggle-passwords"
                            style={{
                              position: "absolute",
                              top: "77%",
                              transform: "translateY(-50%)",
                              color: "#757575",
                              cursor: "pointer",
                              left: "46.5%",
                            }}
                            onClick={handleSetInputType}
                          ></span>
                        </div>
                      </div>
                      <div className="col-lg-6">
                        <div className="form-group">
                          <label className="form-control-label">
                            Confirm Password
                          </label>
                          <input
                            className="form-control"
                            placeholder="Password Confirmation"
                            type={type}
                            name="passwordConfirmation"
                            onChange={formik.handleChange}
                            value={formik.values.passwordConfirmation}
                          />
                          {formik.errors.passwordConfirmation ? (
                            <div className={style.error}>
                              {formik.errors.passwordConfirmation}
                            </div>
                          ) : null}
                          <span
                            className="fas fa-eye toggle-passwords"
                            style={{
                              position: "absolute",
                              top: "77%",
                              transform: "translateY(-50%)",
                              color: "#757575",
                              cursor: "pointer",
                              right: "22.0%",
                            }}
                            onClick={handleSetInputType}
                          ></span>
                        </div>
                      </div>
                    </div>

                    <div className="form-group mb-0">
                      <button
                        className="btn btn-lg btn-block btn-primary w-100"
                        type="submit"
                        style={{
                          fontSize: "13px",
                        }}
                        disabled={isSubmitted}
                      >
                        {isSubmitted == true ? "Please wait..." : "Register"}
                      </button>
                    </div>
                  </form>

                  <div className="text-center dont-have">
                    Already have an account? <a href="/login">Sign in</a>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </>
  );
}
