import React, { useState } from "react";
import Link from "next/link";
import { Loading } from "../components/Loading";
import { useLogin } from "../src/controllers/users";
import { useFormik } from "formik";
import Head from "next/head";
import { Alert } from "reactstrap";
import style from "../styles/Register.module.css";
import { useRouter } from "next/router";
import useCreateAuthToken from "../hooks/AuthTokenHook";

const validate = (values: any) => {
  const errors: Errors = {};

  if (!values.creds) {
    errors.creds = "This field is required!";
  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4}$/i.test(values.creds)) {
    errors.creds = "Invalid email address";
  }

  if (!values.password) {
    errors.password = "This field is required!";
  }

  return errors;
};

export default function LoginPage() {
  const [inputType, setInputType] = React.useState("password");
  const [type, setType] = React.useState("password");
  const [isSubmitted, setIsSubmitted] = React.useState(false);
  const [error, setError] = React.useState("");
  const [hasError, setHasError] = React.useState(false);
  const [success, setSuccess] = React.useState("");
  const router = useRouter();

  const handleSetInputType = (): void => {
    inputType == "password" ? setInputType("text") : setInputType("password");
  };

  const formik = useFormik({
    initialValues: {
      creds: "",
      password: "",
    },
    onSubmit: async (values: {}): Promise<void> => {
      setIsSubmitted(true);
      useLogin(values)
        .then((res) => {
          setSuccess(res.success_en);
          setHasError(false);
          useCreateAuthToken(res);
          router.push('/')
        })
        .catch((err) => {
          setError(err.response.data.error.error_en);
          setHasError(true);
          setIsSubmitted(false);
        });
    },
    validate: validate,
  });

  return (
    <>
      <Head>
        <title>Isiro Sign in</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/isiro_logo.png" />
      </Head>
      <div className="main-wrapper login-body">
        {isSubmitted ? <Loading showLogo={false} /> : ""}
        <div className="login-wrapper register-wrapper">
          <div className="container">
            <img
              className="img-fluid logo-dark mb-2"
              src="/isiro_logo.png"
              alt="Logo"
            />
            <div className="loginbox">
              <div className="login-right">
                <div className="login-right-wrap">
                  <h1>Sign in</h1>
                  <p className="account-subtitle"></p>
                  <Alert color="danger" isOpen={hasError}>
                    <span className="alert-icon">
                      <i className="ni ni-like-2"></i>
                    </span>
                    <span className="alert-text">
                      <strong className={style.regMessage}>
                        Whops, {error}
                      </strong>{" "}
                    </span>
                  </Alert>
                  <form onSubmit={formik.handleSubmit}>
                    <div className="form-group">
                      <label className="form-control-label">
                        Email Address
                      </label>
                      <input
                        type="email"
                        className="form-control"
                        placeholder="Email Address"
                        name="creds"
                        onChange={formik.handleChange}
                        value={formik.values.creds}
                      />
                      {formik.errors.creds ? (
                        <div className={style.error}>{formik.errors.creds}</div>
                      ) : null}
                    </div>
                    <div className="form-group">
                      <label className="form-control-label">Password</label>
                      <div className="pass-group">
                        <input
                          type={inputType}
                          className="form-control pass-input"
                          placeholder="Password"
                          name="password"
                          onChange={formik.handleChange}
                          value={formik.values.password}
                        />
                        {formik.errors.password ? (
                          <div className={style.error}>
                            {formik.errors.password}
                          </div>
                        ) : null}
                        <span
                          className="fas fa-eye toggle-password"
                          onClick={handleSetInputType}
                        ></span>
                      </div>
                    </div>
                    <div className="form-group">
                      <div className="row">
                        <div className="col-6">
                          <div className="custom-control custom-checkbox">
                            <input
                              type="checkbox"
                              className="custom-control-input"
                              id="cb1"
                            />
                            <label
                              className="custom-control-label"
                              style={{ marginLeft: "10px" }}
                            >
                              Remember me
                            </label>
                          </div>
                        </div>
                        <div className="col-6 text-end">
                          <a
                            className="forgot-link"
                            href="auth-recoverpw"
                            style={{ fontSize: "12px" }}
                          >
                            Forgot Password ?
                          </a>
                        </div>
                      </div>
                    </div>
                    <button
                      className="btn btn-lg btn-block btn-primary w-100"
                      type="submit"
                      style={{ fontSize: "14px" }}
                      disabled={isSubmitted}
                    >
                      {isSubmitted == false ? "Login" : "Please wait ..."}
                    </button>
                    {/* <div className="login-or">
                    <span className="or-line"></span>
                    <span className="span-or">or</span>
                  </div> */}

                    {/* <div className="social-login mb-3">
                    <span>Login with</span>
                    <a href="#" className="facebook">
                      <i className="fab fa-facebook-f"></i>
                    </a>
                    <a href="#" className="google">
                      <i className="fab fa-google"></i>
                    </a>
                  </div> */}

                    <div className="text-center dont-have">
                      Don't have an account yet?{" "}
                      <Link href={`register`}>Register</Link>
                    </div>
                  </form>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </>
  );
}
